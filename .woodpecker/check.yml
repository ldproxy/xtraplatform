when:
  event: [push]

steps:

  before:
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      restore: true
      #cache_key: "volume"
      cache_key: '{{ .Repo.Name }}_{{ checksum "gradle/libs.versions.toml" }}_{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}'
      mount: [ '.gradle' ]
    volumes:
      - /tmp/cache:/tmp/cache

  build:
    image: eclipse-temurin:21
    commands:
      - export GRADLE_OPTS="-Dorg.gradle.daemon=false"
      - export GRADLE_USER_HOME=$${CI_WORKSPACE}/.gradle
      - export
      - ./gradlew check assemble -Pbranch=$CI_COMMIT_BRANCH -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS -PforceCache
      - ls -la .gradle
      - du -h --max-depth=1 .gradle
    secrets: [ snapshot_user, snapshot_pass]

  publish-snapshot:
    image: eclipse-temurin:21
    commands:
      - export GRADLE_OPTS="-Dorg.gradle.daemon=false"
      - export GRADLE_USER_HOME=$${CI_WORKSPACE}/.gradle
      - ./gradlew publish -Pbranch=$CI_COMMIT_BRANCH -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS -PforceCache
    secrets: [ snapshot_user, snapshot_pass]

  after:
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      rebuild: true
      #cache_key: "volume"
      cache_key: '{{ .Repo.Name }}_{{ checksum "gradle/libs.versions.toml" }}_{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}'
      mount: [ '.gradle' ]
    volumes:
      - /tmp/cache:/tmp/cache

  log:
    image: eclipse-temurin:21
    commands:
      - ls -laR /tmp/cache
    volumes:
      - /tmp/cache:/tmp/cache

  log2:
    image: eclipse-temurin:21
    commands:
      - ls -laR /root